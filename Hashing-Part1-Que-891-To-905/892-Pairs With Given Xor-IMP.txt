Problem Description

Given an 1D integer array A containing N distinct integers.

Find the number of unique pairs of integers in the array whose XOR is equal to B.

NOTE:

Pair (a, b) and (b, a) is considered to be same and should be counted once.


Problem Constraints

1 <= N <= 105

1 <= A[i], B <= 107



Input Format

First argument is an 1D integer array A.

Second argument is an integer B.



Output Format

Return a single integer denoting the number of unique pairs of integers in the array A whose XOR is equal to B.



Example Input

Input 1:

 A = [5, 4, 10, 15, 7, 6]
 B = 5
Input 2:

 A = [3, 6, 8, 10, 15, 50]
 B = 5


Example Output

Output 1:

 1
Output 2:

 2


Example Explanation

Explanation 1:

 (10 ^ 15) = 5
Explanation 2:

 (3 ^ 6) = 5 and (10 ^ 15) = 5 

//Java - 8

public class Solution {
    public int solve(ArrayList<Integer> A, int B) {
        /*
        //Brute Force
            int count = 0;
            for(int i = 0; i < A.size(); i++){
                for(int j = i+1; j < A.size(); j++){
                    if((A.get(i) ^ A.get(j)) == B)
                        count++;
                }
            }
            return count;
        */
        /*
        *   Optimization :-
            1.  Take a Note that if X ^ Y = B than we can say that
                                    B ^ X = Y this is also true and
                                    B ^ Y = X this is also true 
            2.  Create a empty set.
            3.  Just Iterate over the array and check if we do (B ^ Curr ele) then
                result is present in the set or not if present count that pair
                if not then add current ele in set do this till we reach last index
            4.  Finally return the count of pairs obtained
            5.  TC = O(N) || SC = O(N)
        */

        int count = 0;
        HashSet<Integer> set = new HashSet<>();
        for(int i = 0; i < A.size(); i++){
            int x = B ^ A.get(i);
            if(set.contains(x))
                count++;
            else
                set.add(A.get(i));
        }
        return count;
    }
}
