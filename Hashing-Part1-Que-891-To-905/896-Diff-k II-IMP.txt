Given an array A of integers and another non negative integer k, find if there exists 2 indices 
i and j such that A[i] - A[j] = k, i != j.

Example :

Input :

A : [1 5 3]
k : 2
Output :

1
as 3 - 1 = 2

Return 0 / 1 for this problem.


//Java - 8


public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public int diffPossible(final List<Integer> A, int B) {
        /*
        *   For given array in question {1, 5, 3} and K = 2 the pair is 3-1 = 2 i.e. 3, 1
        *   i.e eq A[i] - A[j] = K --1;
        *   eq 1 can be written as -A[j] = K - A[i] == A[j] = -K + A[i] == A[j] = A[i] - K
        *   if we do this much only if we can see when we reach to 1 we will check
        *   1 - 2 = -1 is present or not this is correct but there might be the case like in
        *   this case 3 is existing in array but -1 not present and we can pair 3 - 1 = K = 2
        *   So to tackle this we form another eq i.e A[j] = K + A[i] == 2 + 1 = 3
        *   TC = O(N) || SC = O(N) 
        */
        HashSet<Integer> set = new HashSet<>();
        for(int i = 0; i < A.size(); i++){
            int x = -B + A.get(i); 
            int y = B + A.get(i);
            if(set.contains(x) || set.contains(y)){
                return 1;
            }else{
                set.add(A.get(i));
            }
        }
        return 0;
    }
}
