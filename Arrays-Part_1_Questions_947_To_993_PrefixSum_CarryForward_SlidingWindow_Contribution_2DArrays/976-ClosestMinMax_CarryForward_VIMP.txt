Problem Description

Given an array A. Find the size of the smallest subarray such that it contains atleast one occurrence of the maximum value of the array

and atleast one occurrence of the minimum value of the array.



Problem Constraints

1 <= |A| <= 2000



Input Format

First and only argument is vector A



Output Format

Return the length of the smallest subarray which has atleast one occurrence of minimum and maximum element of the array



Example Input

Input 1:

A = [1, 3]
Input 2:

A = [2]


Example Output

Output 1:

 2
Output 2:

 1


Example Explanation

Explanation 1:

 Only choice is to take both elements.
Explanation 2:

 Take the whole array.

//Soln - java 8

public class Solution {
    public int solve(int[] A) {
        if(A.length <= 2)
            return A.length;
        
        // Find max and min element in the array
        // TC =O(N) | SC = O(1)
        int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;
        for(int i = 0; i < A.length; i++){
            if(A[i] > max)
                max = A[i];
            if(A[i] < min)
                min = A[i];
        }
        // System.out.println("max and min ="+max+" "+min);
        // return 0;

        // Find length of min to max or max to min minimum length subarray
        //Approach :-
        // 1. Find the index of max element and min element in the loop
        // 2. simultaneously check the the length bu using formula
        //    len = last_max_index - last_min_imdex + 1
        //    if the length is min than previous length then update the length
        // 3. finally return the length
        // TC = O(N + N) = O(N) | SC = O(1)
        int last_max_index = -1, last_min_index = -1, length = 0;
        for(int i = 0; i < A.length; ++i){
            if(A[i] == max){
                last_max_index = i;
            }
            if(A[i] == min){
                last_min_index = i;
            }
            if(last_max_index != -1 && last_min_index != -1){
                int curr = Math.abs(last_max_index - last_min_index)+1;
                if(length == 0)
                    length = curr;
                length = Math.min(length, curr);
                //System.out.println("length = "+length);
            }
        }
        //System.out.println("maxind and minind = "+last_max_index+" , "+last_min_index);
        return length;
    }
}