Problem Description

You are given an integer array A and an integer B. You have to print the same array after rotating it B times towards right.

NOTE: You can use extra memory.



Problem Constraints

1 <= |A| <= 106

1 <= A[i] <= 109

1 <= B <= 109



Input Format

First line begins with an integer |A| denoting the length of array, and then |A| integers denote the array elements.
Second line contains a single integer B



Output Format

Print an array of integers which is the Bth right rotation of input array A, on a separate line.



Example Input

Input 1:

 4 1 2 3 4
 2
Input 2:

 3 1 2 2
 3


Example Output

Output 1:

 3 4 1 2
Output 2:

 1 2 2


Example Explanation

Explanation 1:

 [1,2,3,4] => [4,1,2,3] => [3,4,1,2]

Explanation 2:


 [1,2,2] => [2,1,2] => [2,2,1] => [1,2,2]

//Answer

//langauge - JAVA 8
public class Main {
    public static void main(String[] args) {
        // YOUR CODE GOES HERE
        // Please take input and print output to standard input/output (stdin/stdout)
        // DO NOT USE ARGUMENTS FOR INPUTS
        // E.g. 'Scanner' for input & 'System.out' for output
        /*
            This problem can be solved with two approaches 
            approach 1 :- Two loop's approach 
                1. Start traversing from n - 1 and hold the element store it in temp variable traverse total Rotation count times
                2. second loop will start from n - 2 and shift the values one step ahead
                3. end of second loop place the n-1 element at the first index
            approach 2 :- 
                1. Reverse the whole array in first loop with TC of N/2
                2. Reverse the array from 0th index to Rotation - 1 index   
                    Note : if Rotation's >= arr.length then total Rotation = Rotation % arr.length
                    TC :- R / 2
                3. Reverse the array from Rotation count to N - 1
                   TC = N - R / 2
                So total TC = N/2 + R/2 + N-R/2 = O(N)
        */
        Scanner sc = new Scanner(System.in);
        int [] arr = new int[sc.nextInt()];
        for(int i = 0; i < arr.length; i++){
            arr[i] = sc.nextInt();
        }
        int R = sc.nextInt();
        if(R >= arr.length)
            R = R % arr.length;
        //int i = 0, j = arr.length - 1;
        Main.reverse(arr, 0, arr.length - 1);
        // i = 0;
        // j = R - 1;
        Main.reverse(arr, 0, R - 1);
        // i = R;
        // j = arr.length - 1;
        Main.reverse(arr, R, arr.length - 1);
        for(int ele : arr){
            System.out.print(ele+" ");
        }
    }

    public static void reverse(int[] arr, int i, int j){
        while(i < j){
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }
}