/*
*You are given an integer N you need to print all the Armstrong Numbers between 1 to N.
If sum of cubes of each digit of the number is equal to the number itself, then the number is called an Armstrong number.
For example, 153 = ( 1 * 1 * 1 ) + ( 5 * 5 * 5 ) + ( 3 * 3 * 3 ).

Problem Constraints
1 <= N <= 500

Input Format
First and only line of input contains an integer N.

Output Format
Output all the Armstrong numbers in range [1,N] each in a new line.

Example Input
Input 1:
 5
Input 2:
 200
 
Example Output
Output 1:
1
Output 2:
1
153

*/

//Solution Java 8
import java.lang.*;
import java.util.*;

public class Main {
    public static void main(String[] args) {
        // YOUR CODE GOES HERE
        // Please take input and print output to standard input/output (stdin/stdout)
        // DO NOT USE ARGUMENTS FOR INPUTS
        // E.g. 'Scanner' for input & 'System.out' for output
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int sum = 0;
        for(int i = 1; i <= N; i++){
            sum = 0;
            int temp = i;
            while(temp > 0){
                int rem = temp % 10;
                sum += Math.pow(rem, 3);
                temp = temp / 10;
            }
            //System.out.println("each i = "+i+" sum = "+sum);
            if(sum == i)
                System.out.println(i);
        }
    }
}
