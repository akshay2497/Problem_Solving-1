Problem Description

Given a string A of size N.

Return the string A after reversing the string word by word.

NOTE:

A sequence of non-space characters constitutes a word.
Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
If there are multiple spaces between words, reduce them to a single space in the reversed string.


Problem Constraints

1 <= N <= 3 * 105



Input Format

The only argument given is string A.



Output Format

Return the string A after reversing the string word by word.



Example Input

Input 1:
    A = "the sky is blue"
Input 2:
    A = "this is ib"  


Example Output

Output 1:
    "blue is sky the"
Output 2:
    "ib is this"    


Example Explanation

Explanation 1:
    We reverse the string word by word so the string becomes "the sky is blue".
Explanation 2:
    We reverse the string word by word so the string becomes "this is ib".

//Java 8

import java.lang.*;
import java.util.*;

public class Solution {
    public static void main(String[] args) {
        // YOUR CODE GOES HERE
        // Please take input and print output to standard input/output (stdin/stdout)
        // DO NOT USE ARGUMENTS FOR INPUTS
        // E.g. 'Scanner' for input & 'System.out' for output
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        char[] ch = s.toCharArray();
        reverse(ch, 0, ch.length-1);
        // for(char c : ch){
        //     System.out.print(c);
        // }
        int start = 0;
        for(int i = 0; i < ch.length; i++){
            if(ch[i] == ' '){
                reverse(ch, start, i-1);
                start = i+1;
            }
        }
        reverse(ch, start, ch.length-1);
        for(char c : ch){
            System.out.print(c);
        }

    }
    public static void reverse(char[] ch, int start, int end){
        //int start = 0, end = ch.length-1;
        while(start < end){
            char temp = ch[start];
            ch[start] = ch[end];
            ch[end] = temp;
            start++;
            end--;
        }
    }
}